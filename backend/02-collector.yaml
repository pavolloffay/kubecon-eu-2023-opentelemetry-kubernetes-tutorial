apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: observability-backend
spec:
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.74.0
  mode: deployment
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 10s
              static_configs:
                - targets: [ '0.0.0.0:8888' ]
    
    processors:
      batch:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 50
        spike_limit_percentage: 30
    
    exporters:
      otlp:
        endpoint: "http://tempo.observability-backend.svc.cluster.local:55680"
        tls:
          insecure: true
      otlphttp/mimir:
        endpoint: "http://mimir.observability-backend.svc.cluster.local:8080/otlp"
      loki:
        endpoint: "http://loki.observability-backend.svc.cluster.local:3100/loki/api/v1/push"
      logging:
    
    connectors:
      spanmetrics:
        namespace: "converted"
    
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [otlp, spanmetrics]
        metrics:
          receivers: [prometheus, otlp, spanmetrics]
          processors: [memory_limiter, batch]
          exporters: [otlphttp/mimir]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [loki, logging]
